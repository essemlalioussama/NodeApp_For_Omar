{"version":3,"sources":["dom-utils.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA;;;;;;;;;AASA,OAAO,SAAS,gBAAT,CAA0B,OAA1B,EAAmC,SAAnC,EAA8C,QAA9C,EAAwD,OAAxD,EAAiE;AACvE,EAAA,OAAO,CAAC,gBAAR,CAAyB,SAAzB,EAAoC,UAAA,KAAK,EAAI;AAC5C,QAAI,KAAK,CAAC,MAAN,CAAa,OAAb,CAAqB,QAArB,CAAJ,EAAoC;AACnC,MAAA,OAAO,CAAC,KAAD,CAAP;AACA;AACD,GAJD;AAKA;AAED;;;;;;AAKA,OAAO,SAAS,aAAT,CAAuB,OAAvB,EAAgC;AACtC,SAAO,OAAO,CAAC,UAAf,EAA2B;AAC1B,IAAA,OAAO,CAAC,WAAR,CAAoB,OAAO,CAAC,UAA5B;AACA;AACD;AAED;;;;;;;AAMA,OAAO,SAAS,WAAT,CAAqB,UAArB,EAAiC;AACvC,SAAO,QAAQ,CAAC,WAAT,GAAuB,wBAAvB,CAAgD,UAAhD,CAAP;AACA;AAED;;;;;;;AAMA,OAAO,SAAS,SAAT,CAAmB,gBAAnB,EAAqC;AAC3C,SAAO,IAAI,aAAJ,GAAoB,iBAApB,CAAsC,gBAAtC,CAAP;AACA","file":"dom-utils.es.js","sourcesContent":["/* \n * Copyright 2019, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Add an event listener to `element` that only fires when the target of the\n * event matches `selector`.\n * \n * @param {Element} element\n * @param {String} eventName\n * @param {String} selector\n * @param {Function} handler\n */\nexport function addEventDelegate(element, eventName, selector, handler) {\n\telement.addEventListener(eventName, event => {\n\t\tif (event.target.matches(selector)) {\n\t\t\thandler(event);\n\t\t}\n\t});\n}\n\n/**\n * Removes all of an element's child nodes.\n * \n * @param {Element} element\n */\nexport function clearChildren(element) {\n\twhile (element.firstChild) {\n\t\telement.removeChild(element.firstChild);\n\t}\n}\n\n/**\n * Deserialize an HTML string into a document fragment.\n * \n * @param {String} htmlString\n * @return {DocumentFragment}\n */\nexport function deserialize(htmlString) {\n\treturn document.createRange().createContextualFragment(htmlString);\n}\n\n/**\n * Serialize a document fragment into an HTML string.\n * \n * @param {DocumentFragment} documentFragment\n * @return {String}\n */\nexport function serialize(documentFragment) {\n\treturn new XMLSerializer().serializeToString(documentFragment);\n}\n"]}